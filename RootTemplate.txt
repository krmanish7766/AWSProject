{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Master Template",
    "Parameters": {
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "puttykey",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "Choose the type of EC2 Env Access Gateway Instance",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "SSHLocation" : {
          "Description" : " The IP address range that can be used to SSH to the EC2 instances",
          "Type": "String",
          "MinLength": "9",
          "MaxLength": "18",
          "Default": "0.0.0.0/0",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
          },
        "BucketName" : {
         "Description" : "Name of bucket containing website.tar.gz",
         "Default": "mystackbucket",
         "Type" : "String",
          "AllowedValues": [
                "manish-intern-bucket",
                "mystackbucket"
                ]
          },
        "CIDRVpc" : {
            "Description" : "CIDR of Subnet that must be valid for chosen IP address of VPC",
            "Type" : "String",
            "Default": "10.0.0.0/16"
            
          },
        "CIDRPublicSubnet1" : {
            "Description" : "CIDR of Subnet that must be valid for chosen IP address of VPC",
            "Type" : "String",
            "Default": "10.0.0.0/24"
            
          },
        "CIDRPublicSubnet2" : {
            "Description" : "CIDR of Subnet that must be valid for chosen IP address of VPC",
            "Type" : "String",
            "Default": "10.0.1.0/24"
            
          },
        "CIDRPrivateSubnet1" : {
            "Description" : "CIDR of Subnet that must be valid for chosen IP address of VPC",
            "Type" : "String",
            "Default": "10.0.2.0/24"
          },
        "CIDRPrivateSubnet2" : {
            "Description" : "CIDR of Subnet that must be valid for chosen IP address of VPC",
            "Type" : "String",
            "Default": "10.0.3.0/24"
          }
    },
    "Resources": {
        "ManishVpc": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/VpcTemplate.txt"]]},
               "Parameters" : {
                   "CIDRVpc" : { "Ref" : "CIDRVpc" },
                   "CIDRPublicSubnet1" : {"Ref" : "CIDRPublicSubnet1" },
                   "CIDRPublicSubnet2" : {"Ref" : "CIDRPublicSubnet2" },
                   "CIDRPrivateSubnet1" : {"Ref" : "CIDRPrivateSubnet1" },
                   "CIDRPrivateSubnet2" : {"Ref" : "CIDRPrivateSubnet2" }
               },
               "Tags" : [ {"Key" : "Name", "Value" : "ManishVpc1" } ],
               "TimeoutInMinutes": "6"
           }
       },
        "SGOfAutoScaling": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/SecurityGroupsTemplate.txt"]]},
               "Parameters" : {
                  "SSHLocation" : { "Ref" : "SSHLocation" },
                  "VpcId" : { "Fn::GetAtt": [ "ManishVpc", "Outputs.VpcId" ] },
                  "Type" : "Public",
                  "GroupId" : "Useless"
               },
               "TimeoutInMinutes": "6"
           }
       },
       "LoadBalancer": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/LoadBalancerTemplate.txt"]]},
               "Parameters" : {
                  "VPC" : "vpc-0fc343ff3dfa08f2c",
                  "PublicSubnet1Id" : "subnet-0a2c4385583d75160",
                  "PublicSubnet2Id" : "subnet-07cc085877d3f83b2"
               },
               "TimeoutInMinutes": "6"
           }
       },
        "AutoScaling": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/AutoScalingTemplate.txt"]]},
               "Parameters" : {
                  "KeyName": { "Ref" : "KeyName" },
                  "InstanceType": { "Ref" : "InstanceType" },
                  "SecuritygroupId" : "sg-029486688a6fc7ff4",
                  "PublicSubnet1Id" : "subnet-0a2c4385583d75160",
                  "PublicSubnet2Id" : "subnet-07cc085877d3f83b2",
                  "ALBTargetGroup" : { "Fn::GetAtt": [ "LoadBalancer", "Outputs.TargetGroupARNs" ] }
               },
               "TimeoutInMinutes": "6"
           }
       },
        "SGOfEC2": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/SecurityGroupsTemplate.txt"]]},
               "Parameters" : {
                  "SSHLocation" : { "Ref" : "SSHLocation" },
                  "VpcId" : { "Fn::GetAtt": [ "ManishVpc", "Outputs.VpcId" ] },
                  "Type" : "Private",
                  "GroupId" : { "Fn::GetAtt": [ "SGOfAutoScaling", "Outputs.PublicSGGroupId" ] }
               },
               "TimeoutInMinutes": "6"
           }
       },
        "EC21": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/EC2Template.txt"]]},
               "Parameters" : {
                  "KeyName": { "Ref": "KeyName" },
                  "InstanceType": { "Ref": "InstanceType" },
                  "SubnetId" : { "Fn::GetAtt" : [ "ManishVpc", "Outputs.PrivateSubnet1Id" ] },
                  "SecuritygroupIdOfEC2" : { "Fn::GetAtt" : [ "SGOfEC2", "Outputs.PrivateSGGroupId" ] },
                  "SubnetType" : "Private"
               },
               "Tags" : [ {"Key" : "Name", "Value" : "EC21" } ],
               "TimeoutInMinutes": "6"
           }
       },
        "EC22": {
           "Type": "AWS::CloudFormation::Stack",
           "Properties": {
               "TemplateURL": { "Fn::Join" : ["", ["https://",{ "Ref" : "BucketName" }, ".s3.", {"Ref": "AWS::Region"},".amazonaws.com/project/EC2Template.txt"]]},
               "Parameters" : {
                  "KeyName": { "Ref": "KeyName" },
                  "InstanceType": { "Ref": "InstanceType" },
                  "SubnetId" : { "Fn::GetAtt" : [ "ManishVpc", "Outputs.PrivateSubnet2Id" ] },
                  "SecuritygroupIdOfEC2" : { "Fn::GetAtt" : [ "SGOfEC2", "Outputs.PrivateSGGroupId" ] },
                  "SubnetType" : "Private"
               },
               "Tags" : [ {"Key" : "Name", "Value" : "EC22" } ],
               "TimeoutInMinutes": "6"
           }
       }
    },
    "Outputs": {
        
        }
}